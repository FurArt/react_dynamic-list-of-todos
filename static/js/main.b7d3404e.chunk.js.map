{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoInfo/Todoinfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["Loader","_jsx","className","children","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_ref","todo","onClose","id","title","userId","completed","user","setUser","useState","loading","setLoading","useEffect","async","concat","getUser","fetchUser","finally","fetchData","_jsxs","onClick","resetIdAndCloseModal","type","href","email","name","TodoInfo","isModalOpen","setIsModalOpen","_Fragment","classnames","handleSelectButton","TodoList","todos","map","TodoFilter","filterStatus","setFilterStatus","searchTerm","setSearchTerm","value","onChange","e","target","placeholder","style","pointerEvents","App","setTodos","todosData","filteredTodos","filter","statusMatch","searchMatch","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"oPAGO,MAAMA,EAAmBA,IAC9BC,cAAA,OAAKC,UAAU,SAAS,UAAQ,SAAQC,SACtCF,cAAA,OAAKC,UAAU,sBCSnB,SAASE,EAAOC,GAEd,MAAMC,EAZS,iEAYYD,EAAM,QAGjC,OAXYE,EAWA,IAVL,IAAIC,SAAQC,IACjBC,WAAWD,EAASF,OAUnBI,MAAK,IAAMC,MAAMN,KACjBK,MAAKE,GAAOA,EAAIC,SAbrB,IAAcP,EAgBP,MCbMQ,EAAsCC,IAAwB,IAAvB,KAAEC,EAAI,QAAEC,GAASF,EACnE,MAAM,GACJG,EAAE,MACFC,EAAK,OACLC,EAAM,UACNC,GACEL,GACGM,EAAMC,GAAWC,mBAAsB,OACvCC,EAASC,GAAcF,oBAAS,GAEvCG,qBAAU,KACUC,WACD,OAAXR,EDGcA,IAAmBjB,EAAG,UAAA0B,OAAiBT,ICFvDU,CAAQV,GACLV,MAAMqB,IACLR,EAAQQ,MAETC,SAAQ,KACPN,GAAW,MAGfA,GAAW,IAIfO,KACC,CAACb,IAMJ,OACEc,eAAA,OAAKjC,UAAU,kBAAkB,UAAQ,QAAOC,SAAA,CAC9CF,cAAA,OAAKC,UAAU,qBAEdwB,EACCzB,cAACD,EAAM,IAEPmC,eAAA,OAAKjC,UAAU,aAAYC,SAAA,CACzBgC,eAAA,UAAQjC,UAAU,kBAAiBC,SAAA,CACjCF,cAAA,OACEC,UAAU,0CACV,UAAQ,eAAcC,SAAA,SAAA2B,OAEZX,KAGZlB,cAAA,UACEmC,QArBiBC,KAC3BnB,KAqBUoB,KAAK,SACLpC,UAAU,SACV,UAAQ,cACR,aAAW,mBAIfiC,eAAA,OAAKjC,UAAU,kBAAiBC,SAAA,CAC9BF,cAAA,KAAGC,UAAU,QAAQ,UAAQ,cAAaC,SACvCiB,IAEFE,EACCa,eAAA,KAAGjC,UAAU,QAAQ,UAAQ,aAAYC,SAAA,CACvCF,cAAA,UAAQC,UAAU,mBAAkBC,SAAC,SACpC,OACDF,cAAA,KAAGsC,KAAI,UAAAT,OAAgB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,OAAQrC,SAAM,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,UAG3CN,eAAA,KAAGjC,UAAU,QAAQ,UAAQ,aAAYC,SAAA,CACvCF,cAAA,UAAQC,UAAU,kBAAiBC,SAAC,YACnC,OACDF,cAAA,KAAGsC,KAAI,UAAAT,OAAgB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,OAAQrC,SAAM,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,oBCzE5CC,EAAoC1B,IAAe,IAAd,KAAEC,GAAMD,EACxD,MAAM,GAAEG,EAAE,MAAEC,EAAK,UAAEE,GAAcL,GAC1B0B,EAAaC,GAAkBnB,oBAAS,GAM/C,OACEU,eAAAU,WAAA,CAAA1C,SAAA,CACGwC,GACC1C,cAACc,EAAS,CACRE,KAAMA,EACNC,QAASA,IAAM0B,GAAe,KAGlCT,eAAA,MAEE,UAAQ,OACRjC,UAAW4C,IAAW,CACpB,4BAA6BxB,IAC5BnB,SAAA,CAEHF,cAAA,MAAIC,UAAU,eAAcC,SAAEgB,IAC9BlB,cAAA,MAAIC,UAAU,eAAcC,SACzBmB,GACCrB,cAAA,QAAMC,UAAU,OAAMC,SACpBF,cAAA,KAAGC,UAAU,qBAInBD,cAAA,MAAIC,UAAU,2BAA0BC,SACtCF,cAAA,KACEC,UAAW4C,IAAW,CACpB,mBAAoBxB,EACpB,mBAAoBA,IACnBnB,SAEFiB,MAGLnB,cAAA,MAAIC,UAAU,8BAA6BC,SACzCF,cAAA,UACEmC,QAvCiBW,KACzBH,GAAe,IAuCP,UAAQ,eACR1C,UAAU,SACVoC,KAAK,SAAQnC,SAGbF,cAAA,QAAMC,UAAU,OAAMC,SACpBF,cAAA,KAAGC,UAAU,uBAjCdiB,OClBA6B,EAAoChC,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OACzDmB,eAAA,SAAOjC,UAAU,+BAA8BC,SAAA,CAC7CF,cAAA,SAAAE,SACEgC,eAAA,MAAAhC,SAAA,CACEF,cAAA,MAAAE,SAAI,MACJF,cAAA,MAAAE,SACEF,cAAA,QAAMC,UAAU,OAAMC,SACpBF,cAAA,KAAGC,UAAU,qBAGjBD,cAAA,MAAAE,SAAI,UACJF,cAAA,MAAAE,SAAI,WAIRF,cAAA,SAAAE,SACG8C,EAAMC,KAAIjC,GACThB,cAACyC,EAAQ,CAAezB,KAAMA,GAAfA,EAAKE,YChBfgC,EAAwCnC,IAAA,IAAC,aACpDoC,EAAY,gBACZC,EAAe,WACfC,EAAU,cACVC,GACDvC,EAAA,OACCmB,eAAA,QAAMjC,UAAU,mBAAkBC,SAAA,CAChCF,cAAA,KAAGC,UAAU,UAASC,SACpBF,cAAA,QAAMC,UAAU,SAAQC,SACtBgC,eAAA,UACE,UAAQ,eACRqB,MAAOJ,EACPK,SAAWC,GAAML,EAAgBK,EAAEC,OAAOH,OAAOrD,SAAA,CAEjDF,cAAA,UAAQuD,MAAM,MAAKrD,SAAC,QACpBF,cAAA,UAAQuD,MAAM,SAAQrD,SAAC,WACvBF,cAAA,UAAQuD,MAAM,YAAWrD,SAAC,qBAKhCgC,eAAA,KAAGjC,UAAU,qDAAoDC,SAAA,CAC/DF,cAAA,SACE,UAAQ,cACRqC,KAAK,OACLpC,UAAU,QACV0D,YAAY,YACZJ,MAAOF,EACPG,SAAWC,GAAMH,EAAcG,EAAEC,OAAOH,SAE1CvD,cAAA,QAAMC,UAAU,eAAcC,SAC5BF,cAAA,KAAGC,UAAU,oBAGdoD,GACCrD,cAAA,QAAMC,UAAU,gBAAgB2D,MAAO,CAAEC,cAAe,OAAQ3D,SAC9DF,cAAA,UACE,UAAQ,oBACRqC,KAAK,SACLpC,UAAU,SACVkC,QAASA,IAAMmB,EAAc,IAC7B,aAAW,0BCvCVQ,EAAgBA,KAC3B,MAAOrC,EAASC,GAAcF,oBAAS,IAChCwB,EAAOe,GAAYvC,mBAAiB,KACpC2B,EAAcC,GAAmB5B,mBAAiB,QAClD6B,EAAYC,GAAiB9B,mBAAiB,IAErDG,qBAAU,KACUC,WLMQzB,EAAY,UKJjCO,MAAMsD,IACLD,EAASC,MAEVhC,SAAQ,KACPN,GAAW,OAIjBO,KACC,IAEH,MAAMgC,EAAgBjB,EAAMkB,QAAQlD,IAClC,MAAMmD,EAA+B,QAAjBhB,GACC,WAAjBA,IAA8BnC,EAAKK,WAClB,cAAjB8B,GAAgCnC,EAAKK,UAEnC+C,GAAcf,GAChBrC,EAAKG,MAAMkD,cAAcC,SAASjB,EAAWgB,eAGjD,OAAOF,GAAeC,KAGxB,OACEpE,cAAA4C,WAAA,CAAA1C,SACEF,cAAA,OAAKC,UAAU,UAASC,SACtBF,cAAA,OAAKC,UAAU,YAAWC,SACxBgC,eAAA,OAAKjC,UAAU,MAAKC,SAAA,CAClBF,cAAA,MAAIC,UAAU,QAAOC,SAAC,WAEtBF,cAAA,OAAKC,UAAU,QAAOC,SACpBF,cAACkD,EAAU,CACTC,aAAcA,EACdC,gBAAiBA,EACjBC,WAAYA,EACZC,cAAeA,MAInBtD,cAAA,OAAKC,UAAU,QAAOC,SACnBuB,EAAUzB,cAACD,EAAM,IAAMC,cAAC+C,EAAQ,CAACC,MAAOiB,gBCzDvDM,IAASC,OACPxE,cAAC8D,EAAG,IACJW,SAASC,eAAe,W","file":"static/js/main.b7d3404e.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface TodoModalProps {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (userId !== null) {\n        getUser(userId)\n          .then((fetchUser) => {\n            setUser(fetchUser);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      } else {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [userId]);\n\n  const resetIdAndCloseModal = () => {\n    onClose();\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              onClick={resetIdAndCloseModal}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close Modal\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n            {completed ? (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-success\">Done</strong>\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            ) : (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className=\"has-text-danger\">Planned</strong>\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleSelectButton = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      {isModalOpen && (\n        <TodoModal\n          todo={todo}\n          onClose={() => setIsModalOpen(false)}\n        />\n      )}\n      <tr\n        key={id}\n        data-cy=\"todo\"\n        className={classnames({\n          'has-background-info-light': completed,\n        })}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n        <td className=\"is-vcentered\">\n          {completed && (\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={classnames({\n              'has-text-success': completed,\n              'has-text-danger': !completed,\n            })}\n          >\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            onClick={handleSelectButton}\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n\n          >\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n    </>\n\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface TodoFilterProps {\n  filterStatus: string;\n  setFilterStatus: React.Dispatch<React.SetStateAction<string>>;\n  searchTerm: string;\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  filterStatus,\n  setFilterStatus,\n  searchTerm,\n  setSearchTerm,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterStatus}\n          onChange={(e) => setFilterStatus(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-search\" />\n      </span>\n\n      {searchTerm && ( // Only render the clear button if searchTerm is not empty\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchTerm('')}\n            aria-label=\"reset button\"\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      getTodos()\n        .then((todosData) => {\n          setTodos(todosData);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchData();\n  }, []);\n\n  const filteredTodos = todos.filter((todo) => {\n    const statusMatch = filterStatus === 'all'\n    || (filterStatus === 'active' && !todo.completed)\n    || (filterStatus === 'completed' && todo.completed);\n\n    const searchMatch = searchTerm\n      ? todo.title.toLowerCase().includes(searchTerm.toLowerCase())\n      : true;\n\n    return statusMatch && searchMatch;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterStatus={filterStatus}\n                setFilterStatus={setFilterStatus}\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : <TodoList todos={filteredTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}